# ‚öôÔ∏è TECH HY Ecosystem Configuration
apiVersion: v1
kind: ConfigMap
metadata:
  name: techhy-ecosystem-config
  namespace: techhy-ecosystem
  labels:
    app.kubernetes.io/name: techhy-ecosystem
    app.kubernetes.io/component: config
    app.kubernetes.io/part-of: tech-hy-ecosystem
    app.kubernetes.io/managed-by: github-actions
    environment: production
data:
  # Network Configuration
  bsc.rpc.url: "https://bsc-dataseed.binance.org/"
  bsc.chain.id: "56"
  
  # Smart Contract Addresses
  contract.vc.token: "0xC88eC091302Eb90e78a4CA361D083330752dfc9A"
  contract.vg.token: "0xe87c0Ff36084033FfB56aCf68F2dD5857C65342d"
  contract.lp.locker: "0x9269baba99cE0388Daf814E351b4d556fA728D32"
  contract.governor: "0x786133467f52813Ce0855023D4723A244524563E"
  contract.timelock: "0x06EEB4c972c05BBEbf960Fec99f483dC95768e39"
  contract.lp.token: "0xA221093a37396c6301db4B24D55E1C871DF31d13"
  
  # Application Configuration
  app.name: "TECH HY Ecosystem"
  app.version: "1.0.0"
  app.environment: "production"
  
  # Branding
  brand.name: "TECH HY Ecosystem"
  brand.url: "https://techhy.me"
  brand.support.email: "i@techhy.me"
  
  # Frontend Configuration
  frontend.title: "TECH HY Ecosystem - DeFi Platform"
  frontend.description: "Enterprise LP Locking & DAO Governance Platform"
  frontend.keywords: "DeFi, LP Locking, DAO, Governance, BSC, TECH HY"
  
  # Feature Flags
  features.analytics: "false"
  features.sentry: "false"
  features.dev.tools: "false"
  features.mainnet: "true"

---
# üîê Secret for sensitive configuration
apiVersion: v1
kind: Secret
metadata:
  name: techhy-ecosystem-secrets
  namespace: techhy-ecosystem
  labels:
    app.kubernetes.io/name: techhy-ecosystem
    app.kubernetes.io/component: secret
    app.kubernetes.io/part-of: tech-hy-ecosystem
    app.kubernetes.io/managed-by: github-actions
    environment: production
type: Opaque
data:
  # Analytics keys (base64 encoded)
  analytics.id: ""  # Add your analytics ID here (base64 encoded)
  sentry.dsn: ""    # Add your Sentry DSN here (base64 encoded)
  
  # API keys for external services
  bsc.api.key: ""   # BSC API key if needed (base64 encoded)
  
  # JWT secret for session management (if backend is added)
  jwt.secret: ""    # JWT secret (base64 encoded) 