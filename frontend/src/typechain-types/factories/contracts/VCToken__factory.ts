/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../common";
import type { VCToken, VCTokenInterface } from "../../contracts/VCToken";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "allowance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "balance",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "needed",
        type: "uint256",
      },
    ],
    name: "ERC20InsufficientBalance",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "approver",
        type: "address",
      },
    ],
    name: "ERC20InvalidApprover",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "receiver",
        type: "address",
      },
    ],
    name: "ERC20InvalidReceiver",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "ERC20InvalidSpender",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "OwnableInvalidOwner",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "OwnableUnauthorizedAccount",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "TokensMinted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_SUPPLY",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "reason",
        type: "string",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mintTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "remainingMintableSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60803462000457576200113190813803601f1991601f91838382011682019460018060401b0391838710838811176200035b57808492604098895283396020938491810103126200045757516001600160a01b03808216959092909186900362000457576200006d6200045c565b94600a8652692b30b63ab29021b7b4b760b11b858701526200008e6200045c565b956002875261564360f01b868801528051918383116200035b5760039283546001938482811c921680156200044c575b8a83101462000436578184849311620003e0575b5089908483116001146200037d5760009262000371575b505060001982861b1c191690831b1783555b87519384116200035b5760049788548381811c9116801562000350575b898210146200033b57828111620002f0575b50879185116001146200028757849550908492916000956200027b575b50501b92600019911b1c19161783555b83156200026457600580546001600160a01b0319811686179091558491167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0600080a36002546a52b7d2dcc80cd2e4000000928382018092116200024f575091846080927f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc946002558560005260008152816000208381540190558560007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef838551878152a38151928352820152600c858201526b125b9a5d1a585b081b5a5b9d60a21b6060820152a251610cb490816200047d8239f35b601190634e487b7160e01b6000525260246000fd5b8451631e4fbdf760e01b8152600081850152602490fd5b01519350388062000147565b9291948416928860005284886000209460005b8a89838310620002d85750505010620002bd575b50505050811b01835562000157565b01519060f884600019921b161c1916905538808080620002ae565b8686015189559097019694850194889350016200029a565b89600052886000208380880160051c8201928b891062000331575b0160051c019084905b828110620003245750506200012a565b6000815501849062000314565b925081926200030b565b60228a634e487b7160e01b6000525260246000fd5b90607f169062000118565b634e487b7160e01b600052604160045260246000fd5b015190503880620000e9565b908886941691876000528b6000209260005b8d828210620003c95750508411620003b0575b505050811b018355620000fb565b015160001983881b60f8161c19169055388080620003a2565b83850151865589979095019493840193016200038f565b90915085600052896000208480850160051c8201928c86106200042c575b918791869594930160051c01915b8281106200041c575050620000d2565b600081558594508791016200040c565b92508192620003fe565b634e487b7160e01b600052602260045260246000fd5b91607f1691620000be565b600080fd5b60408051919082016001600160401b038111838210176200035b5760405256fe6080604081815260048036101561001557600080fd5b600092833560e01c90816306fdde031461081d57508063095ea7b31461077457806318160ddd1461075557806323b872dd14610662578063313ce5671461064657806332cb6b0c1461061f578063349f0b90146105d457806342966c68146104d6578063449a52f81461045c57806370a0823114610425578063715018a6146103c85780638da5cb5b1461039f57806395d89b411461027f578063a9059cbb1461024e578063d3fc9864146101bd578063dd62ed3e146101705763f2fde38b146100de57600080fd5b3461016c57602036600319011261016c576100f7610953565b90610100610a9a565b6001600160a01b03918216928315610156575050600554826bffffffffffffffffffffffff60a01b821617600555167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08380a380f35b51631e4fbdf760e01b8152908101849052602490fd5b8280fd5b5050346101b957806003193601126101b9578060209261018e610953565b61019661096e565b6001600160a01b0391821683526001865283832091168252845220549051908152f35b5080fd5b50903461016c57606036600319011261016c576101d8610953565b836044359267ffffffffffffffff9485851161016c573660238601121561016c578401359485116101b95736602486860101116101b9578461024b956024602093610221610a9a565b5196610236601f8401601f1916860189610984565b82885201838701378401015260243590610ae9565b80f35b5050346101b957806003193601126101b95760209061027861026e610953565b60243590336109bc565b5160018152f35b50913461039c578060031936011261039c578151918184549260018460011c9160018616958615610392575b602096878510811461037f579087899a92868b999a9b5291826000146103555750506001146102fa575b85886102f6896102e7848a0385610984565b51928284938452830190610913565b0390f35b815286935091907f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b82841061033d57505050820101816102e76102f6386102d5565b8054848a018601528895508794909301928101610323565b60ff19168882015294151560051b870190940194508593506102e792506102f691503890506102d5565b634e487b7160e01b835260228a52602483fd5b92607f16926102ab565b80fd5b5050346101b957816003193601126101b95760055490516001600160a01b039091168152602090f35b833461039c578060031936011261039c576103e1610a9a565b600580546001600160a01b0319811690915581906001600160a01b03167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e08280a380f35b5050346101b95760203660031901126101b95760209181906001600160a01b0361044d610953565b16815280845220549051908152f35b509190346101b957806003193601126101b957610477610953565b61047f610a9a565b8151918083019083821067ffffffffffffffff8311176104c35761024b94955052600d82526c14dd185b99185c99081b5a5b9d609a1b602083015260243590610ae9565b634e487b7160e01b855260418652602485fd5b509190346101b95760203660031901126101b957823590811561059257331561057c5733835282602052808320549382851061055157508183943385528460205203818420558160025403600255519081527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef60203392a380f35b905163391434e360e21b81523391810191825260208201859052604082018390529081906060010390fd5b51634b637e8f60e11b8152808401839052602490fd5b5162461bcd60e51b8152602081850152601960248201527f5643546f6b656e3a206275726e20616d6f756e74207a65726f000000000000006044820152606490fd5b509190346101b957816003193601126101b957600254916b033b2e3c9fd0803ce800000092830392831161060c576020838351908152f35b634e487b7160e01b815260118452602490fd5b5050346101b957816003193601126101b957602090516b033b2e3c9fd0803ce80000008152f35b5050346101b957816003193601126101b9576020905160128152f35b50823461039c57606036600319011261039c5761067d610953565b61068561096e565b916044359360018060a01b0383168083526001602052868320338452602052868320549160001983106106c1575b6020886102788989896109bc565b8683106107295781156107125733156106fb57508252600160209081528683203384528152918690209085900390558290610278876106b3565b8751634a1406b160e11b8152908101849052602490fd5b875163e602df0560e01b8152908101849052602490fd5b8751637dc7a0d960e11b8152339181019182526020820193909352604081018790528291506060010390fd5b5050346101b957816003193601126101b9576020906002549051908152f35b503461016c578160031936011261016c5761078d610953565b602435903315610806576001600160a01b03169182156107ef57508083602095338152600187528181208582528752205582519081527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925843392a35160018152f35b8351634a1406b160e11b8152908101859052602490fd5b835163e602df0560e01b8152808401869052602490fd5b90508383346101b957816003193601126101b957816003549260018460011c9160018616958615610909575b602096878510811461037f578899509688969785829a5291826000146108e2575050600114610886575b5050506102f692916102e7910385610984565b9190869350600383527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b8284106108ca57505050820101816102e76102f6610873565b8054848a0186015288955087949093019281016108b1565b60ff19168782015293151560051b860190930193508492506102e791506102f69050610873565b92607f1692610849565b919082519283825260005b84811061093f575050826000602080949584010152601f8019910116010190565b60208183018101518483018201520161091e565b600435906001600160a01b038216820361096957565b600080fd5b602435906001600160a01b038216820361096957565b90601f8019910116810190811067ffffffffffffffff8211176109a657604052565b634e487b7160e01b600052604160045260246000fd5b916001600160a01b03808416928315610a815716928315610a685760009083825281602052604082205490838210610a36575091604082827fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef958760209652828652038282205586815220818154019055604051908152a3565b60405163391434e360e21b81526001600160a01b03919091166004820152602481019190915260448101839052606490fd5b60405163ec442f0560e01b815260006004820152602490fd5b604051634b637e8f60e11b815260006004820152602490fd5b6005546001600160a01b03163303610aae57565b60405163118cdaa760e01b8152336004820152602490fd5b91908201809211610ad357565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0316918215610c39578115610bf457600254916b033b2e3c9fd0803ce8000000610b1a8285610ac6565b11610baf57610b4a817f9d89e36eadf856db0ad9ffb5a569e07f95634dddd9501141ecf04820484ad0dc94610ac6565b60025583600052600060205260406000208181540190558360007fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef6020604051858152a3610baa6040519283928352604060208401526040830190610913565b0390a2565b60405162461bcd60e51b815260206004820152601b60248201527f5643546f6b656e3a2065786365656473206d617820737570706c7900000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601960248201527f5643546f6b656e3a206d696e7420616d6f756e74207a65726f000000000000006044820152606490fd5b60405162461bcd60e51b815260206004820152601d60248201527f5643546f6b656e3a206d696e7420746f207a65726f20616464726573730000006044820152606490fdfea2646970667358221220801d9ddf901238d5ec03315a9d8b0bb3009293d5c6b53bde2caddbab8fa62ec564736f6c63430008160033";

type VCTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: VCTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class VCToken__factory extends ContractFactory {
  constructor(...args: VCTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(initialOwner, overrides || {});
  }
  override deploy(
    initialOwner: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(initialOwner, overrides || {}) as Promise<
      VCToken & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): VCToken__factory {
    return super.connect(runner) as VCToken__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): VCTokenInterface {
    return new Interface(_abi) as VCTokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): VCToken {
    return new Contract(address, _abi, runner) as unknown as VCToken;
  }
}
